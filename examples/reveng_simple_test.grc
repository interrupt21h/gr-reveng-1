<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.9'?>
<flow_graph>
  <timestamp>Sat May 13 15:39:30 2017</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value></value>
    </param>
    <param>
      <key>category</key>
      <value>Custom</value>
    </param>
    <param>
      <key>comment</key>
      <value>This flowgraph builds a simple packet, and sends
it through the Deframer. Try modifying the
packet structure and parameters to test your
understanding of how the deframer works!</value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 13)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>qt_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>reveng_simple_test</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>A one byte checksum, not included in the length.
Each bit is represented by an X's.
(reveng works with symbols!)</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 421)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>csum_bits</value>
    </param>
    <param>
      <key>value</key>
      <value>[0,1] * 4</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>The message to send, consists of all 'B'
characters, and one C.</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 421)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>msg</value>
    </param>
    <param>
      <key>value</key>
      <value>[0]*((pktlen*8)-1) + [1]</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>How many bytes to transmit in the
data section.</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 197)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pktlen</value>
    </param>
    <param>
      <key>value</key>
      <value>10</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>The length byte, converted into bits</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 301)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pktlen_bits</value>
    </param>
    <param>
      <key>value</key>
      <value>map(int, bin(pktlen )[2:].zfill(8))</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(184, 13)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>32000</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>ChipCon likes 0xd391!</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(744, 197)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>sync_word</value>
    </param>
    <param>
      <key>value</key>
      <value>0xd391</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>Converts 0xd391 to an array of bits</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 197)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>sync_word_bits</value>
    </param>
    <param>
      <key>value</key>
      <value>map(int, bin(sync_word)[2:].zfill(16))</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>The transmitter ID is 0xdeadbeef</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(744, 301)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>transmitter_id</value>
    </param>
    <param>
      <key>value</key>
      <value>0xdeadbeef</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>Represents the transmitter ID.
Using A to represent the bits.</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 301)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>transmitter_id_bits</value>
    </param>
    <param>
      <key>value</key>
      <value>map(int, bin(transmitter_id)[2:].zfill(32))</value>
    </param>
  </block>
  <block>
    <key>blocks_message_debug</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>Remember, each "byte" on screen is actually
a bit!</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1000, 17)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_message_debug_0</value>
    </param>
  </block>
  <block>
    <key>blocks_throttle</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(560, 76)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_throttle_0</value>
    </param>
    <param>
      <key>ignoretag</key>
      <value>True</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samples_per_second</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_vector_source_x</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>Modify the packet structure here!</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 62)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_vector_source_x_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>repeat</key>
      <value>True</value>
    </param>
    <param>
      <key>tags</key>
      <value>[]</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>vector</key>
      <value>sync_word_bits + transmitter_id_bits + pktlen_bits + msg + csum_bits + [0]*10000</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>* MESSAGE DEBUG PRINT PDU VERBOSE *
((name . RevengTestSrc) (ts . 6937513679))
pdu_length = 128
contents = 
0000: 01 01 00 01 01 01 01 00 01 00 01 00 01 01 00 01 
0010: 01 00 01 01 01 01 01 00 01 01 01 00 01 01 01 01 
0020: 00 00 00 00 01 00 01 00 42 42 42 42 42 42 42 42 
0030: 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 
0040: 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 
0050: 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 
0060: 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 
0070: 42 42 42 42 42 42 42 43 58 58 58 58 58 58 58 58 
***********************************

0000 - 0010: 0xdeadbeef, in bit form
0020: The length byte, and the start of the message
0070: The end of the message, and the checksum</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(744, 412)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_0</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>reveng_packet_deframer</key>
    <param>
      <key>pkt_len_adtl</key>
      <value>len(csum_bits)/8</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>encoding</key>
      <value>none</value>
    </param>
    <param>
      <key>big_endian</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(736, 48)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>reveng_packet_deframer_0</value>
    </param>
    <param>
      <key>pkt_len_idx</key>
      <value>len(transmitter_id_bits)/8</value>
    </param>
    <param>
      <key>msb</key>
      <value>True</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>fixed_len</key>
      <value>False</value>
    </param>
    <param>
      <key>name</key>
      <value>RevengTestSrc</value>
    </param>
    <param>
      <key>pkt_len</key>
      <value>2</value>
    </param>
    <param>
      <key>sync</key>
      <value>sync_word_bits</value>
    </param>
  </block>
  <block>
    <key>reveng_packet_formatter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>The new Packet Formatter object!</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>format_str</key>
      <value>%(name)\ntransmitter_id: %(hex[0:32])\nPacket Length: %(hex[32:40])\nFull Packet: %(hex)\n</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1000, 188)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>reveng_packet_formatter_0</value>
    </param>
  </block>
  <connection>
    <source_block_id>blocks_throttle_0</source_block_id>
    <sink_block_id>reveng_packet_deframer_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_vector_source_x_0</source_block_id>
    <sink_block_id>blocks_throttle_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>reveng_packet_deframer_0</source_block_id>
    <sink_block_id>blocks_message_debug_0</sink_block_id>
    <source_key>out</source_key>
    <sink_key>print_pdu</sink_key>
  </connection>
  <connection>
    <source_block_id>reveng_packet_deframer_0</source_block_id>
    <sink_block_id>reveng_packet_formatter_0</sink_block_id>
    <source_key>out</source_key>
    <sink_key>pdus</sink_key>
  </connection>
</flow_graph>
